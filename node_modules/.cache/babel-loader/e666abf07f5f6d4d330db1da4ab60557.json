{"ast":null,"code":"import _regeneratorRuntime from \"K:\\\\ALevel\\\\REACT\\\\shop-project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"K:\\\\ALevel\\\\REACT\\\\shop-project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"K:\\\\ALevel\\\\REACT\\\\shop-project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"K:\\\\ALevel\\\\REACT\\\\shop-project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"K:\\\\ALevel\\\\REACT\\\\shop-project\\\\src\\\\screens\\\\goods-search\\\\goods-search.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query goodFind($query: String) {\\n    GoodFind(query: $query) {\\n      name\\n      _id\\n      images {\\n        url\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport API from \"./../../API\";\nimport Spinner from \"../../shared/components/spinner\";\nimport { gql } from \"graphql-request\";\nimport { Link } from \"react-router-dom\";\nvar query = gql(_templateObject());\n\nvar StatusResolver = function StatusResolver(_ref) {\n  var status = _ref.status,\n      noData = _ref.noData,\n      children = _ref.children;\n\n  if (status === \"searching\") {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (noData) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    }, \"No Data\");\n  }\n\n  if (status === \"idle\") {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    }, \"Search data\");\n  }\n\n  if (status === \"resolved\") {\n    return children;\n  }\n};\n\nvar GoodsSearch = function GoodsSearch() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      result = _React$useState2[0],\n      setResult = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"idle\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      status = _React$useState4[0],\n      setStatus = _React$useState4[1];\n\n  var onChange = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var searchQuery;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              searchQuery = new RegExp(e.target.value);\n              setStatus(\"searching\");\n              _context.next = 4;\n              return new Promise(function (resolve) {\n                return setTimeout(function () {\n                  return API.request(query, {\n                    query: JSON.stringify([{\n                      name: searchQuery.toString()\n                    }])\n                  }).then(function (res) {\n                    setResult(res.GoodFind);\n                    resolve(setStatus(\"resolved\"));\n                  });\n                }, 3000);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onChange(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleResult = function handleResult(arr) {\n    return arr.map(function (x) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"card\",\n        style: \"width: 18rem;\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: x.images[0] ? x.images[0].url : \"http://\",\n        class: \"card-img-top\",\n        alt: x._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"card-body\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        class: \"card-title\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, x.name), /*#__PURE__*/React.createElement(\"p\", {\n        class: \"card-text\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\",\n        class: \"btn btn-primary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, \"Go somewhere\")));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"Go Home\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12 col-md-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"search\",\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12 my-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StatusResolver, {\n    noData: result !== null && result.length === 0,\n    status: status,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, JSON.stringify(result)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, handleResult(result)))));\n};\n\nexport default GoodsSearch;","map":{"version":3,"sources":["K:/ALevel/REACT/shop-project/src/screens/goods-search/goods-search.jsx"],"names":["React","API","Spinner","gql","Link","query","StatusResolver","status","noData","children","GoodsSearch","useState","result","setResult","setStatus","onChange","e","searchQuery","RegExp","target","value","Promise","resolve","setTimeout","request","JSON","stringify","name","toString","then","res","GoodFind","handleResult","arr","map","x","images","url","_id","length"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport API from \"./../../API\"\r\nimport Spinner from \"../../shared/components/spinner\"\r\nimport { gql } from \"graphql-request\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst query = gql`\r\n  query goodFind($query: String) {\r\n    GoodFind(query: $query) {\r\n      name\r\n      _id\r\n      images {\r\n        url\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst StatusResolver = ({ status, noData, children }) => {\r\n  if (status === \"searching\") {\r\n    return <Spinner />\r\n  }\r\n\r\n  if (noData) {\r\n    return <span>No Data</span>\r\n  }\r\n  if (status === \"idle\") {\r\n    return <span>Search data</span>\r\n  }\r\n  if (status === \"resolved\") {\r\n    return children\r\n  }\r\n}\r\nconst GoodsSearch = () => {\r\n  const [result, setResult] = React.useState(null)\r\n  const [status, setStatus] = React.useState(\"idle\")\r\n\r\n  const onChange = async (e) => {\r\n    const searchQuery = new RegExp(e.target.value)\r\n    setStatus(\"searching\")\r\n    await new Promise((resolve) =>\r\n      setTimeout(\r\n        () =>\r\n          API.request(query, {\r\n            query: JSON.stringify([\r\n              {\r\n                name: searchQuery.toString(),\r\n              },\r\n            ]),\r\n          }).then((res) => {\r\n            setResult(res.GoodFind)\r\n            resolve(setStatus(\"resolved\"))\r\n          }),\r\n        3000\r\n      )\r\n    )\r\n  }\r\n\r\n  const handleResult = (arr) => {\r\n\r\n    return arr.map((x) => (\r\n      <div class=\"card\" style=\"width: 18rem;\">\r\n        <img\r\n          src={x.images[0] ? x.images[0].url : \"http://\"}\r\n          class=\"card-img-top\"\r\n          alt={x._id}\r\n        />\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">{x.name}</h5>\r\n          <p class=\"card-text\">\r\n            Some quick example text to build on the card title and make up the\r\n            bulk of the card's content.\r\n          </p>\r\n          <a href=\"#\" class=\"btn btn-primary\">\r\n            Go somewhere\r\n          </a>\r\n        </div>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div className=\"Container\">\r\n      <Link to=\"/\">Go Home</Link>\r\n      <div className=\"col-sm-12 col-md-4\">\r\n        <input className=\"form-control\" type=\"search\" onChange={onChange} />\r\n      </div>\r\n      <div className=\"col-sm-12 my-3\">\r\n        <StatusResolver\r\n          noData={result !== null && result.length === 0}\r\n          status={status}\r\n        >\r\n          <div>{JSON.stringify(result)}</div>\r\n          <div>{handleResult(result)}</div>\r\n         \r\n        </StatusResolver>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GoodsSearch\r\n"]},"metadata":{},"sourceType":"module"}