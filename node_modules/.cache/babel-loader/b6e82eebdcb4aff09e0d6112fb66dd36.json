{"ast":null,"code":"import _taggedTemplateLiteral from \"K:\\\\ALevel\\\\REACT\\\\shop-project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"K:\\\\ALevel\\\\REACT\\\\shop-project\\\\src\\\\screens\\\\category\\\\category-screen.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getCategory($query: String) {\\n    CategoryFindOne(query: $query) {\\n      name\\n      parent {\\n        name\\n      }\\n      goods {\\n        _id\\n        price\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { gql } from \"graphql-request\";\nimport useQuery from \"./../../shared/hooks/use-query\";\nimport Spinner from \"./../../shared/components/spinner\";\nvar query = gql(_templateObject());\n\nvar CategoryScreen = function CategoryScreen() {\n  console.log(useParams());\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _useQuery = useQuery({\n    initialState: {\n      CategoryFindOne: {\n        goods: []\n      }\n    },\n    query,\n    variables: {\n      query: JSON.stringify([{\n        _id: id\n      }])\n    }\n  }),\n      data = _useQuery.data,\n      status = _useQuery.status;\n\n  var _data$CategoryFindOne = data.CategoryFindOne,\n      goods = _data$CategoryFindOne.goods,\n      parent = _data$CategoryFindOne.parent;\n  var title = parent === null ? \"Category\" : \"Sub category\";\n  console.log(\"parent\", parent);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, title, \" Screen: \", id), status === \"pending\" ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 31\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, goods === null ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"There is no data\") : goods.map(function (good) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: good._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, good.name), /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, good.price));\n  })));\n};\n\nexport default CategoryScreen;","map":{"version":3,"sources":["K:/ALevel/REACT/shop-project/src/screens/category/category-screen.jsx"],"names":["React","useParams","gql","useQuery","Spinner","query","CategoryScreen","console","log","id","initialState","CategoryFindOne","goods","variables","JSON","stringify","_id","data","status","parent","title","map","good","name","price"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AAEA,IAAMC,KAAK,GAAGH,GAAH,mBAAX;;AAgBA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAS,EAArB;;AAD2B,mBAEZA,SAAS,EAFG;AAAA,MAEnBQ,EAFmB,cAEnBA,EAFmB;;AAAA,kBAGFN,QAAQ,CAAC;AAChCO,IAAAA,YAAY,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAAnB,KADkB;AAEhCP,IAAAA,KAFgC;AAGhCQ,IAAAA,SAAS,EAAE;AACTR,MAAAA,KAAK,EAAES,IAAI,CAACC,SAAL,CAAe,CACpB;AACEC,QAAAA,GAAG,EAAEP;AADP,OADoB,CAAf;AADE;AAHqB,GAAD,CAHN;AAAA,MAGnBQ,IAHmB,aAGnBA,IAHmB;AAAA,MAGbC,MAHa,aAGbA,MAHa;;AAAA,8BAiBvBD,IAjBuB,CAgBzBN,eAhByB;AAAA,MAgBNC,KAhBM,yBAgBNA,KAhBM;AAAA,MAgBCO,MAhBD,yBAgBCA,MAhBD;AAmB3B,MAAMC,KAAK,GAAGD,MAAM,KAAK,IAAX,GAAkB,UAAlB,iBAAd;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBW,MAAtB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KADH,eACmBX,EADnB,CADF,EAIGS,MAAM,KAAK,SAAX,gBAAuB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,GAAqC,IAJxC,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,KAAK,IAAV,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,GAGCA,KAAK,CAACS,GAAN,CAAU,UAACC,IAAD;AAAA,wBACR;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACN,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOM,IAAI,CAACC,IAAZ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,IAAI,CAACE,KAAZ,CAFF,CADQ;AAAA,GAAV,CAJJ,CALF,CADF;AAoBD,CAzCD;;AA2CA,eAAelB,cAAf","sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { gql } from \"graphql-request\";\nimport useQuery from \"./../../shared/hooks/use-query\";\nimport Spinner from \"./../../shared/components/spinner\";\n\nconst query = gql`\n  query getCategory($query: String) {\n    CategoryFindOne(query: $query) {\n      name\n      parent {\n        name\n      }\n      goods {\n        _id\n        price\n        name\n      }\n    }\n  }\n`;\n\nconst CategoryScreen = () => {\n  console.log(useParams())\n  const { id } = useParams();\n  const { data, status } = useQuery({\n    initialState: { CategoryFindOne: { goods: [] } },\n    query,\n    variables: {\n      query: JSON.stringify([\n        {\n          _id: id\n        }\n      ])\n    }\n  });\n\n  const {\n    CategoryFindOne: { goods, parent }\n  } = data;\n\n  const title = parent === null ? \"Category\" : `Sub category`;\n  console.log(\"parent\", parent);\n  return (\n    <div>\n      <h1>\n        {title} Screen: {id}\n      </h1>\n      {status === \"pending\" ? <Spinner /> : null}\n      <ul>\n        {goods === null ? (\n          <h2>There is no data</h2>\n        ) : (\n          goods.map((good) => (\n            <li key={good._id}>\n              <span>{good.name}</span>\n              <span>{good.price}</span>\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default CategoryScreen;\n"]},"metadata":{},"sourceType":"module"}