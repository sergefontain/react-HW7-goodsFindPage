{"ast":null,"code":"import _slicedToArray from \"K:\\\\ALevel\\\\REACT\\\\shop-project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"K:\\\\ALevel\\\\REACT\\\\shop-project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"K:\\\\ALevel\\\\REACT\\\\shop-project\\\\src\\\\screens\\\\goods-search\\\\goods-search.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query goodFind($query: String) {\\n    GoodFind(query: $query) {\\n      name\\n      _id\\n      images {\\n        url\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport API from \"./../../API\";\nimport Spinner from \"../../shared/components/spinner\";\nimport { gql } from \"graphql-request\";\nimport { Link } from \"react-router-dom\";\nvar query = gql(_templateObject());\n\nvar StatusResolver = function StatusResolver(_ref) {\n  var status = _ref.status,\n      noData = _ref.noData,\n      children = _ref.children;\n\n  if (status === \"searching\") {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (noData) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    }, \"No Data\");\n  }\n\n  if (status === \"idle\") {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    }, \"Search data\");\n  }\n\n  if (status === \"resolved\") {\n    console.log(children); //   return children\n\n    return [1, 2, 3].map(function (x) {\n      return x;\n    }); // <div class=\"card\" style=\"width: 18rem;\">\n    //   <img src={x.images[0].url} class=\"card-img-top\" alt={x._id} />\n    //   <div class=\"card-body\">\n    //     <h5 class=\"card-title\">{x.name}</h5>\n    //     <p class=\"card-text\">\n    //       Some quick example text to build on the card title and make up the\n    //       bulk of the card's content.\n    //     </p>\n    //     <a href=\"#\" class=\"btn btn-primary\">\n    //       Go somewhere\n    //     </a>\n    //   </div>\n    // </div>\n  }\n};\n\nvar GoodsSearch = function GoodsSearch() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      result = _React$useState2[0],\n      setResult = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"idle\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      status = _React$useState4[0],\n      setStatus = _React$useState4[1];\n\n  var onChange = function onChange(e) {\n    var searchQuery = new RegExp(e.target.value);\n    setStatus(\"searching\");\n    API.request(query, {\n      query: JSON.stringify([{\n        name: String(searchQuery)\n      }])\n    }).then(function (res) {\n      setResult(res.GoodFind);\n      setStatus(\"resolved\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Go Home\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12 col-md-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"search\",\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12 my-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StatusResolver, {\n    noData: result !== null && result.length === 0,\n    status: status,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, result))));\n};\n\nexport default GoodsSearch;","map":{"version":3,"sources":["K:/ALevel/REACT/shop-project/src/screens/goods-search/goods-search.jsx"],"names":["React","API","Spinner","gql","Link","query","StatusResolver","status","noData","children","console","log","map","x","GoodsSearch","useState","result","setResult","setStatus","onChange","e","searchQuery","RegExp","target","value","request","JSON","stringify","name","String","then","res","GoodFind","length"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport API from \"./../../API\"\r\nimport Spinner from \"../../shared/components/spinner\"\r\nimport { gql } from \"graphql-request\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst query = gql`\r\n  query goodFind($query: String) {\r\n    GoodFind(query: $query) {\r\n      name\r\n      _id\r\n      images {\r\n        url\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst StatusResolver = ({ status, noData, children }) => {\r\n  if (status === \"searching\") {\r\n    return <Spinner />\r\n  }\r\n\r\n  if (noData) {\r\n    return <span>No Data</span>\r\n  }\r\n  if (status === \"idle\") {\r\n    return <span>Search data</span>\r\n  }\r\n  if (status === \"resolved\") {\r\n    console.log(children)\r\n    //   return children\r\n    return [1,2,3].map(x => x)\r\n  \r\n        // <div class=\"card\" style=\"width: 18rem;\">\r\n        //   <img src={x.images[0].url} class=\"card-img-top\" alt={x._id} />\r\n        //   <div class=\"card-body\">\r\n        //     <h5 class=\"card-title\">{x.name}</h5>\r\n        //     <p class=\"card-text\">\r\n        //       Some quick example text to build on the card title and make up the\r\n        //       bulk of the card's content.\r\n        //     </p>\r\n        //     <a href=\"#\" class=\"btn btn-primary\">\r\n        //       Go somewhere\r\n        //     </a>\r\n        //   </div>\r\n        // </div>\r\n      \r\n    \r\n  }\r\n}\r\nconst GoodsSearch = () => {\r\n  const [result, setResult] = React.useState(null)\r\n  const [status, setStatus] = React.useState(\"idle\")\r\n\r\n  const onChange = (e) => {\r\n    const searchQuery = new RegExp(e.target.value)\r\n    setStatus(\"searching\")\r\n    API.request(query, {\r\n      query: JSON.stringify([\r\n        {\r\n          name: String(searchQuery),\r\n        },\r\n      ]),\r\n    }).then((res) => {\r\n      setResult(res.GoodFind)\r\n      setStatus(\"resolved\")\r\n    })\r\n  }\r\n\r\n \r\n  return (\r\n    <div className=\"Container\">\r\n      <Link to=\"/\">Go Home</Link>\r\n      <div className=\"col-sm-12 col-md-4\">\r\n        <input className=\"form-control\" type=\"search\" onChange={onChange} />\r\n      </div>\r\n      <div className=\"col-sm-12 my-3\">\r\n        <StatusResolver\r\n          noData={result !== null && result.length === 0}\r\n          status={status}\r\n        >\r\n          {/* <div>{JSON.stringify(result)}</div> */}\r\n          <div>{result}</div>\r\n        </StatusResolver>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GoodsSearch\r\n"]},"metadata":{},"sourceType":"module"}